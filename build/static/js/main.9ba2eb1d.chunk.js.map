{"version":3,"sources":["components/CodeEditor.jsx","components/Controls.jsx","utils/utilFunctions.js","components/UserInput.jsx","utils/utilGraph.js","components/placeholder.jsx","components/Visualizer.js","App.js","index.js"],"names":["require","DEFAULT_PYTHON_OPTIONS","autoCloseBrackets","mode","lineNumbers","class","theme","indentUnit","indentWithTabs","CodeEditor","props","className","value","code","options","onBeforeChange","editor","data","setCode","Controls","useState","anchorEl","setAnchorEl","Button","variant","color","style","marginLeft","marginTop","onClick","runCode","disabled","isRunning","setArrOfCalls","aria-controls","aria-haspopup","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","handleCodeChange","FormControlLabel","control","Switch","checked","jelly","onChange","setJelly","label","Slider","defaultValue","width","aria-labelledby","valueLabelDisplay","setRenderSpeed","min","getFunctionName","startIndex","ind","length","i","functionName","getFunctionCall","callIndex","reversed_code","split","reverse","join","reversed_name","lengthOfCode","lengthOfName","search_range","getCallIndex","functionCall","truncateFunctionCall","slice","UserInput","submittedCode","setSubmittedCode","a","funcName","alert","console","log","arr","funcCall","codeToSend","setIsLoading","noError","headers","params","fetchConfig","method","body","fetch","response","text","callTrace","ok","Error","setIsRunning","arrOfStr","arrOfCalls","push","setFuncName","codeRecieved","reset","isBaseCase","node","nodes","caller","useStyles","makeStyles","root","maxWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","OutlinedCard","classes","Card","marginRight","CardContent","Typography","component","Visualizer","name","ANIMATION_SPEED","renderSpeed","links","graphState","setGraphState","useEffect","interval","listOfNodes","calls","spaces","heights","param","result","callerToAdd","substring","paramToAdd","heightToAdd","x","y","size","parseNodesFromCalls","listOfEdges","source","target","parseEdgesFromNodes","shift","setInterval","clearInterval","placeHolder","myConfig","nodeHighlightBehavior","highlightStrokeColor","highlightFontSize","labelPosition","labelProperty","fontColor","d3","gravity","link","highlightColor","directed","window","innerWidth","height","innerHeight","staticGraph","isLoading","config","onClickNode","nodeId","nodesSoFar","originalColor","setTimeout","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ba2eb1d.chunk.js","sourcesContent":["import { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"./codemirror.css\";\r\n\r\nrequire(\"codemirror/theme/material.css\");\r\nrequire(\"codemirror/theme/lesser-dark.css\");\r\nrequire(\"codemirror/mode/python/python\");\r\nrequire(\"codemirror/lib/codemirror.css\");\r\n\r\nconst DEFAULT_PYTHON_OPTIONS = {\r\n  autoCloseBrackets: true,\r\n  mode: \"python\",\r\n  lineNumbers: true,\r\n  class: \"CodeMirror\",\r\n  theme: \"lesser-dark\",\r\n  indentUnit: 4,\r\n  indentWithTabs: false,\r\n};\r\n\r\nconst CodeEditor = (props) => {\r\n  return (\r\n    <div className=\"mirror-wrapper\">\r\n      <CodeMirror\r\n        value={props.code}\r\n        options={{ ...DEFAULT_PYTHON_OPTIONS }}\r\n        onBeforeChange={(editor, data, value) => {\r\n          props.setCode(value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","import { useState } from \"react\";\r\nimport { Button, Menu, MenuItem, Slider } from \"@material-ui/core\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport \"./Controls.css\";\r\n\r\nconst Controls = (props) => {\r\n  const handleChange = () => {\r\n    props.setJelly(!props.jelly);\r\n  };\r\n\r\n  const onSlide = (event, value) => {\r\n    props.setRenderSpeed(value);\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    props.setArrOfCalls([]);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleCloseQS = () => {\r\n    props.handleCodeChange(`\r\ndef QS(arr):\r\n    elements = len(arr)\r\n    if elements < 2:\r\n        return arr\r\n\r\n    current_position = 0\r\n    for i in range(1, elements): \r\n          if arr[i] <= arr[0]:\r\n              current_position += 1\r\n              temp = arr[i]\r\n              arr[i] = arr[current_position]\r\n              arr[current_position] = temp\r\n\r\n    temp = arr[0]\r\n    arr[0] = arr[current_position] \r\n    arr[current_position] = temp \r\n\r\n    left = QS(arr[0:current_position]) \r\n    right = QS(arr[current_position+1:elements]) \r\n\r\n    arr = left + [arr[current_position]] + right \r\n\r\n    return arr\r\n\r\narray_to_sort = [9,2,7,1,4,0,4,7]\r\nQS(array_to_sort)\r\n    `);\r\n    setAnchorEl(null);\r\n  };\r\n  const handleCloseFib = () => {\r\n    props.handleCodeChange(`\r\ndef fib(x):\r\n    if x == 1 or x == 2:\r\n        return 1\r\n    return fib(x - 1) + fib(x - 2)\r\n\r\nfib(9)\r\n    `);\r\n    setAnchorEl(null);\r\n  };\r\n  const handleCloseFibDP = () => {\r\n    props.handleCodeChange(`\r\ndp = [None]*100\r\ndef fib(x):\r\n    if(dp[x] != None):\r\n        return dp[x]\r\n    if x == 1 or x == 2:\r\n        return 1\r\n    dp[x] = fib(x - 1) + fib(x - 2)\r\n    return dp[x]\r\n\r\nfib(9)\r\n    `);\r\n    setAnchorEl(null);\r\n  };\r\n  const handleCloseFact = () => {\r\n    props.handleCodeChange(`\r\ndef fact(x):\r\n    if x == 0 or x == 1:\r\n        return 1\r\n    return x * fact(x-1)\r\n\r\nfact(17)\r\n    `);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"ControlPanel\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n        onClick={props.runCode}\r\n        disabled={props.isRunning}\r\n      >\r\n        Run Code\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n        disabled={props.isRunning}\r\n        onClick={() => {\r\n          props.setArrOfCalls([]);\r\n        }}\r\n      >\r\n        Reset graph\r\n      </Button>\r\n\r\n      <Button\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n        disabled={props.isRunning}\r\n      >\r\n        Example Functions\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        \r\n        <MenuItem onClick={handleCloseFib}>Fibonacci</MenuItem>\r\n        <MenuItem onClick={handleCloseFibDP}>\r\n          Fibonacci with Memoization\r\n        </MenuItem>\r\n        <MenuItem onClick={handleCloseQS}>Quick Sort</MenuItem>\r\n        <MenuItem onClick={handleCloseFact}>Factorial</MenuItem>\r\n      </Menu>\r\n\r\n      <FormControlLabel\r\n        style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n        control={\r\n          <Switch\r\n            checked={props.jelly}\r\n            onChange={handleChange}\r\n            color=\"secondary\"\r\n          />\r\n        }\r\n        label=\"Condense\"\r\n      />\r\n\r\n      <Slider\r\n        defaultValue={75}\r\n        style={{width:\"98%\", marginLeft:\"1%\"}}\r\n        aria-labelledby=\"discrete-slider-always\"\r\n        valueLabelDisplay=\"auto\"\r\n        onChange={onSlide}\r\n        min={10}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","export const getFunctionName = (code) => {\r\n  const toFind = \"def \";\r\n  let startIndex = -1;\r\n  for (let ind = 0; ind<code.length; ++ind) {\r\n    let i = 0;\r\n    for (; i < 4; ++i) {\r\n      if (code[ind + i] !== toFind[i]) {\r\n        break;\r\n      }\r\n    }\r\n    if (i === 4) {\r\n      startIndex = ind + i;\r\n      break;\r\n    }\r\n  }\r\n  let functionName = \"\";\r\n\r\n  if (startIndex === -1) {\r\n    return functionName;\r\n  }\r\n\r\n  for (let ind = startIndex; ind < code.length; ind++) {\r\n    if (code[ind] === \"(\") {\r\n      break;\r\n    }\r\n    if (code[ind] !== \" \") {\r\n      functionName += code[ind];\r\n    }\r\n  }\r\n  return functionName;\r\n};\r\n\r\nconst getCallIndex = (code, functionName) => {\r\n  const reversed_code = code.split(\"\").reverse().join(\"\");\r\n  const reversed_name = functionName.split(\"\").reverse().join(\"\");\r\n  const lengthOfCode = code.length;\r\n  const lengthOfName = reversed_name.length;\r\n  const search_range = lengthOfCode - lengthOfName + 1;\r\n\r\n  let callIndex = -1;\r\n\r\n  for (let ind = 0; ind < search_range; ++ind) {\r\n    let i = 0;\r\n    for (; i < lengthOfName; ++i) {\r\n      if (reversed_code[ind + i] !== reversed_name[i]) {\r\n        break;\r\n      }\r\n    }\r\n    if (i === lengthOfName) {\r\n      callIndex = lengthOfCode - ind - i;\r\n      break;\r\n    }\r\n  }\r\n  return callIndex;\r\n};\r\n\r\nexport const getFunctionCall = (code, functionName) => {\r\n  const callIndex = getCallIndex(code, functionName);\r\n  const lengthOfCode = code.length;\r\n\r\n  let functionCall = \"\";\r\n  if (callIndex === -1) {\r\n    return functionCall;\r\n  }\r\n\r\n  for (let ind = callIndex; ind < lengthOfCode; ++ind) {\r\n    if (code[ind] !== \" \") {\r\n      functionCall += code[ind];\r\n    }\r\n    if (code[ind] === \")\") {\r\n      break;\r\n    }\r\n  }\r\n  return [functionCall, callIndex];\r\n};\r\n\r\nexport const truncateFunctionCall = (code, callIndex) => {\r\n  const newCode = code.slice(0, callIndex -1);\r\n  return newCode;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport Controls from \"./Controls\";\r\nimport {\r\n  getFunctionName,\r\n  getFunctionCall,\r\n  truncateFunctionCall,\r\n} from \"../utils/utilFunctions\";\r\n\r\nconst UserInput = (props) => {\r\n  const [submittedCode, setSubmittedCode] = useState(\r\n    \"# DO NOT include any 'print()' statement! \\n\\ndef fib(x):\\n    if x == 1 or x == 2:\" +\r\n      \"\\n        return 1\\n    return fib(x - 1) + fib(x - 2)\\n\\nfib(10)\"\r\n  );\r\n\r\n  const handleCodeChange = (codeRecieved) => {\r\n    setSubmittedCode(codeRecieved);\r\n  }\r\n\r\n  const runCode = async () => {\r\n    let code = \"\";\r\n    for (let i = 0; i < submittedCode.length; i++) {\r\n      if (submittedCode[i] === \"\\t\") {\r\n        code += \"    \";\r\n      } else {\r\n        code += submittedCode[i];\r\n      }\r\n    }\r\n\r\n    const funcName = getFunctionName(code);\r\n    if (funcName.length === 0) {\r\n      alert(\"You need to declare atleast one function.\");\r\n      return;\r\n    }\r\n    console.log(`Function Name: ${funcName}`);\r\n\r\n    const arr = getFunctionCall(code, funcName);\r\n    const funcCall = arr[0];\r\n    const callIndex = arr[1];\r\n    if (funcCall === \"\") {\r\n      alert(\"You need to call the function at the end of funcion declaration.\");\r\n      return;\r\n    }\r\n    console.log(`Funciton Call: ${funcCall}`);\r\n\r\n    const codeToSend = truncateFunctionCall(code, callIndex);\r\n    console.log(`Code to send for evaluation: ${code}`);\r\n    props.setIsLoading(true);\r\n\r\n    let callTrace;\r\n    let noError = true;\r\n    try {\r\n      // send HTTP request to flask server and store response inside callTrace\r\n      const domain = \"https://remote-code-executer.herokuapp.com/\";\r\n      const headers = {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      };\r\n\r\n      const params = `/execute?function_name=${funcName}&function_call=${funcCall}`;\r\n      const fetchConfig = {\r\n        method: \"POST\",\r\n        headers: headers,\r\n        body: codeToSend,\r\n      };\r\n      let response = await fetch(domain + params, fetchConfig);\r\n      callTrace = await response.text();\r\n      if (!response.ok) {\r\n        throw new Error(callTrace);\r\n      }\r\n    } catch (e) {\r\n      // if and when there is some error executing the python code on the server,\r\n      // the flask server will send back some sort of error response. We will\r\n      // catch that case here and alert the user accordingly\r\n      alert(\"There was an error executing your code. Details: \" + e);\r\n      noError = false;\r\n    }\r\n    props.setIsLoading(false);\r\n    console.log(callTrace);\r\n    if (callTrace && noError) {\r\n      props.setIsRunning(true);\r\n      const arrOfStr = callTrace.split(\"|\");\r\n      const arrOfCalls = [];\r\n      console.log(arrOfStr);\r\n      for (let i = arrOfStr.length - 1; i >= 0; --i) {\r\n        arrOfCalls.push(arrOfStr[i].split(\":\"));\r\n      }\r\n      console.log(arrOfCalls);\r\n      props.setArrOfCalls(arrOfCalls);\r\n      props.setFuncName(funcName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CodeEditor code={submittedCode} setCode={setSubmittedCode} />\r\n      <Controls\r\n        handleCodeChange={handleCodeChange}\r\n        runCode={runCode}\r\n        isRunning={props.isRunning}\r\n        reset={props.reset}\r\n        setArrOfCalls={props.setArrOfCalls} \r\n        jelly={props.jelly}\r\n        setJelly={props.setJelly}\r\n        setRenderSpeed={props.setRenderSpeed}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInput;\r\n","export function parseNodesFromCalls(calls,funcName){\r\n\r\n    let spaces = {}\r\n    let heights = {}\r\n\r\n    for(let call of calls){\r\n        spaces[call[0]] = \"\"\r\n    }\r\n    spaces[\"0\"] = \" \"\r\n\r\n    let nodes = []\r\n    for(let i=0; i<calls.length;i++){\r\n        console.log(calls[i]);\r\n        const param = calls[i][0]\r\n        const result = calls[i][1]\r\n        const caller = calls[i][2]\r\n\r\n        let callerToAdd = `${funcName}(${caller})${spaces[caller]}`\r\n        callerToAdd = callerToAdd.substring(0,callerToAdd.length-1);\r\n        const paramToAdd = `${funcName}(${param})${spaces[param]}`\r\n        spaces[param] += \" \"\r\n\r\n        //Nodes with same caller should have same height.\r\n\r\n        let heightToAdd = (i+1)*75\r\n        if(callerToAdd in heights){\r\n            heightToAdd = heights[callerToAdd]\r\n        } else {\r\n            heights[callerToAdd] = heightToAdd\r\n        }\r\n        nodes.push({\r\n            id: paramToAdd,\r\n            caller: callerToAdd,\r\n            result: result,\r\n            label:paramToAdd,\r\n            x: (i+1)*120,\r\n            y:heightToAdd,\r\n            size:500,\r\n            color:\"blue\"\r\n\r\n        })\r\n    }\r\n\r\n    //given root node extra size and changed its color to green\r\n\r\n    if(nodes.length > 0){\r\n        nodes[0].size = 700\r\n        nodes[0].color = \"orange\"\r\n    }\r\n\r\n    //looked for all the base nodes and set their color to blue\r\n    for(let i=0; i<nodes.length; ++i){\r\n        if(isBaseCase(nodes[i],nodes)){\r\n            nodes[i].color = \"red\"\r\n        }\r\n    }\r\n    return nodes\r\n}\r\n\r\nfunction isBaseCase(node, nodes){\r\n\r\n    for(let i=0; i<nodes.length; ++i){\r\n        if(node.id === nodes[i].caller) return false\r\n    }\r\n    return true\r\n}\r\n\r\nexport function parseEdgesFromNodes(listOfNodes){\r\n\r\n    let listOfEdges = []\r\n    for(let i=1; i<listOfNodes.length; ++i){\r\n        listOfEdges.push({\r\n            source: listOfNodes[i].caller,\r\n            target: listOfNodes[i].id\r\n        })\r\n    }\r\n    return listOfEdges\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 730,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 3px\",\r\n    transform: \"scale(0.9)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function OutlinedCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{ marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"50px\", marginBottom:\"50px\" }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Instructions\r\n        </Typography>\r\n\r\n        <Typography className={classes.pos} color=\"textPrimary\">\r\n          Made with <span>❤️</span> by Neha <br />\r\n        </Typography>\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        ᐅ Writing Code\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          component=\"p\"\r\n          style={{ marginLeft: \"30px\" }}\r\n        >\r\n          • You should define only one recursive function.\r\n          <br />\r\n          • DO NOT include any 'print()' statement!\r\n          <br />\r\n          • NO empty return statements. You have to return something.\r\n          <br />\r\n          • Be sure to call the function at the end.\r\n          <br />\r\n          • Make sure your code is syntactically correct and follows proper indentation.\r\n          (Python 3) <br /> <br/>\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        ᐅ Running Code\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          component=\"p\"\r\n          style={{ marginLeft: \"30px\" }}\r\n        >\r\n          • If all goes well, you will see a nice recursive visualization of\r\n          your function. <br />\r\n          • Orange node == initial call || Blue node == recursive call || Red node ==\r\n          base case. <br />\r\n          • Turn 'Condense' off for a static graph. <br />\r\n          • Click on any Node and view it's return value. <br/>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import { useEffect, useState, Fragment } from \"react\";\r\nimport { Graph } from \"react-d3-graph\";\r\nimport { parseEdgesFromNodes, parseNodesFromCalls } from \"../utils/utilGraph\";\r\nimport \"./Visualizer.scss\";\r\nimport OutlinedCard from \"./placeholder\";\r\n\r\nconst Visualizer = (props) => {\r\n  const funcName = props.name;\r\n  const callTrace = props.callTrace;\r\n  const ANIMATION_SPEED = 1100 - props.renderSpeed * 10;\r\n  const [graphState, setGraphState] = useState({\r\n    nodes: [],\r\n    links: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    setGraphState({\r\n      nodes: [],\r\n      links: [],\r\n    });\r\n    const listOfNodes = parseNodesFromCalls(callTrace, funcName);\r\n    const listOfEdges = parseEdgesFromNodes(listOfNodes);\r\n\r\n    let interval;\r\n    let nodes = [];\r\n    let links = [];\r\n    if (listOfNodes.length > 0) {\r\n      nodes.push(listOfNodes.shift());\r\n      setGraphState({\r\n        nodes: nodes,\r\n        links: [],\r\n      });\r\n    } else {\r\n      setGraphState({\r\n        nodes: [],\r\n        links: [],\r\n      });\r\n    }\r\n    interval = setInterval(() => {\r\n      if (listOfEdges.length > 0) {\r\n        nodes.push(listOfNodes.shift());\r\n        links.push(listOfEdges.shift());\r\n        console.log(nodes);\r\n        console.log(links);\r\n        setGraphState({\r\n          nodes: nodes,\r\n          links: links,\r\n        });\r\n      } else {\r\n        props.setIsRunning(false);\r\n        clearInterval(interval);\r\n      }\r\n    }, ANIMATION_SPEED);\r\n    return () => clearInterval(interval);\r\n  }, [callTrace, funcName, ANIMATION_SPEED]);\r\n\r\n  const myConfig = {\r\n    nodeHighlightBehavior: true,\r\n    node: {\r\n      color: \"red\",\r\n      size: 500,\r\n      highlightStrokeColor: \"blue\",\r\n      fontSize: 20,\r\n      highlightFontSize: 35,\r\n      labelPosition: \"top\",\r\n      labelProperty: \"label\",\r\n      fontColor: \"white\",\r\n    },\r\n    d3: {\r\n      gravity: -700,\r\n    },\r\n    link: {\r\n      highlightColor: \"yellow\",\r\n    },\r\n    directed: true,\r\n    width: window.innerWidth * 2,\r\n    height: window.innerHeight,\r\n    staticGraph: !props.jelly,\r\n  };\r\n\r\n  //included method to manipulate nodes\r\n  const onClickNode = (nodeId) => {\r\n    let nodesSoFar = graphState.nodes;\r\n    for (let i = 0; i < nodesSoFar.length; i++) {\r\n      if (nodesSoFar[i].id === nodeId) {\r\n        const originalColor = nodesSoFar[i].color;\r\n        nodesSoFar[i] = {\r\n          id: nodesSoFar[i].id,\r\n          caller: nodesSoFar[i].caller,\r\n          result: nodesSoFar[i].result,\r\n          label: nodesSoFar[i].result,\r\n          color: \"cyan\",\r\n          size: nodesSoFar[i].size,\r\n        };\r\n        setGraphState({\r\n          nodes: nodesSoFar,\r\n          links: graphState.links,\r\n        });\r\n        setTimeout(() => {\r\n          nodesSoFar[i] = {\r\n            id: nodesSoFar[i].id,\r\n            caller: nodesSoFar[i].caller,\r\n            result: nodesSoFar[i].result,\r\n            label: nodesSoFar[i].id,\r\n            color: originalColor,\r\n            size: nodesSoFar[i].size,\r\n          };\r\n          setGraphState({\r\n            nodes: nodesSoFar,\r\n            links: graphState.links,\r\n          });\r\n        }, 3000);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  let placeHolder;\r\n\r\n  if (props.isLoading) {\r\n    console.log(props.isLoading);\r\n    placeHolder = (\r\n      <div className=\"container\">\r\n      <div className=\"loading\">\r\n        <div className=\"dot\"></div>\r\n        <div className=\"dot\"></div>\r\n        <div className=\"dot\"></div>\r\n        <div className=\"dot\"></div>\r\n        <div className=\"dot\"></div>\r\n      </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    placeHolder = <OutlinedCard/>\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {graphState.nodes.length > 0 && !props.isLoading ? (\r\n        <Graph\r\n          id=\"graph-id\"\r\n          data={graphState}\r\n          config={myConfig}\r\n          onClickNode={onClickNode}\r\n        />\r\n      ) : (\r\n        placeHolder\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Visualizer;\r\n","import { Fragment, useState } from \"react\";\nimport UserInput from \"./components/UserInput\";\nimport Visualizer from \"./components/Visualizer\";\nimport \"./App.css\";\n\nfunction App() {\n  const [arrOfCalls, setArrOfCalls] = useState([]);\n  const [funcName, setFuncName] = useState(\"\");\n  const [renderSpeed, setRenderSpeed] = useState(75);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [jelly, setJelly] = useState(false);\n\n  return (\n    <Fragment>\n      <UserInput\n        setArrOfCalls={setArrOfCalls}\n        setRenderSpeed={setRenderSpeed}\n        setFuncName={setFuncName}\n        setIsLoading={setIsLoading}\n        setIsRunning={setIsRunning}\n        isRunning={isRunning}\n        setJelly={setJelly}\n        jelly={jelly}\n      />\n      <Visualizer\n        name={funcName}\n        callTrace={arrOfCalls}\n        renderSpeed={renderSpeed}\n        setIsRunning={setIsRunning}\n        isLoading={isLoading}\n        jelly={jelly}\n      />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}